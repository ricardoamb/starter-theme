{"version":3,"sources":["navigation.js"],"names":["container","button","menu","links","i","len","document","getElementById","getElementsByTagName","setAttribute","className","indexOf","onclick","replace","length","addEventListener","toggleFocus","touchStartFn","parentLink","querySelectorAll","window","e","menuItem","this","parentNode","classList","contains","remove","preventDefault","children","add","style","display","self","tagName","toLowerCase","parentElement"],"mappings":"CAMA,WACA,IAAAA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAGA,IADAL,EAAAM,SAAAC,eAAA,0BAMA,KADAN,EAAAD,EAAAQ,qBAAA,UAAA,IAQA,QAAA,KAHAN,EAAAF,EAAAQ,qBAAA,MAAA,IAGA,CA0BA,IArBAN,EAAAO,aAAA,gBAAA,UACA,IAAAP,EAAAQ,UAAAC,QAAA,cACAT,EAAAQ,WAAA,aAGAT,EAAAW,QAAA,YACA,IAAAZ,EAAAU,UAAAC,QAAA,YACAX,EAAAU,UAAAV,EAAAU,UAAAG,QAAA,WAAA,IACAZ,EAAAQ,aAAA,gBAAA,SACAP,EAAAO,aAAA,gBAAA,WAEAT,EAAAU,WAAA,WACAT,EAAAQ,aAAA,gBAAA,QACAP,EAAAO,aAAA,gBAAA,UAQAL,EAAA,EAAAC,GAHAF,EAAAD,EAAAM,qBAAA,MAGAM,OAAAV,EAAAC,EAAAD,IACAD,EAAAC,GAAAW,iBAAA,QAAAC,GAAA,GACAb,EAAAC,GAAAW,iBAAA,OAAAC,GAAA,IA4BA,SAAAhB,GACA,IAAAiB,EAAAb,EACAc,EAwBAlB,EAxBAmB,iBAAA,4DAEA,GAAA,iBAAAC,OAkBA,IAjBAH,EAAA,SAAAI,GACA,IAAAjB,EAAAkB,EAAAC,KAAAC,WAEA,GAAAF,EAAAG,UAAAC,SAAA,SAUAJ,EAAAG,UAAAE,OAAA,aAVA,CAEA,IADAN,EAAAO,iBACAxB,EAAA,EAAAA,EAAAkB,EAAAE,WAAAK,SAAAf,SAAAV,EACAkB,IAAAA,EAAAE,WAAAK,SAAAzB,IAGAkB,EAAAE,WAAAK,SAAAzB,GAAAqB,UAAAE,OAAA,SAEAL,EAAAG,UAAAK,IAAA,WAMA1B,EAAA,EAAAA,EAAAc,EAAAJ,SAAAV,EACAc,EAAAd,GAAAW,iBAAA,aAAAE,GAAA,GAvBA,QAvDAhB,EAAA8B,MAAAC,QAAA,OAiCA,SAAAhB,IAIA,IAHA,IAAAiB,EAAAV,MAGA,IAAAU,EAAAvB,UAAAC,QAAA,aAGA,OAAAsB,EAAAC,QAAAC,iBACA,IAAAF,EAAAvB,UAAAC,QAAA,SACAsB,EAAAvB,UAAAuB,EAAAvB,UAAAG,QAAA,SAAA,IAEAoB,EAAAvB,WAAA,UAIAuB,EAAAA,EAAAG,eAjEA","file":"app.min.js","sourcesContent":["/**\n * File navigation.js.\n *\n * Handles toggling the navigation menu for small screens and enables TAB key\n * navigation support for dropdown menus.\n */\n( function() {\n\tvar container, button, menu, links, i, len;\n\n\tcontainer = document.getElementById( 'site-navigation' );\n\tif ( ! container ) {\n\t\treturn;\n\t}\n\n\tbutton = container.getElementsByTagName( 'button' )[0];\n\tif ( 'undefined' === typeof button ) {\n\t\treturn;\n\t}\n\n\tmenu = container.getElementsByTagName( 'ul' )[0];\n\n\t// Hide menu toggle button if menu is empty and return early.\n\tif ( 'undefined' === typeof menu ) {\n\t\tbutton.style.display = 'none';\n\t\treturn;\n\t}\n\n\tmenu.setAttribute( 'aria-expanded', 'false' );\n\tif ( -1 === menu.className.indexOf( 'nav-menu' ) ) {\n\t\tmenu.className += ' nav-menu';\n\t}\n\n\tbutton.onclick = function() {\n\t\tif ( -1 !== container.className.indexOf( 'toggled' ) ) {\n\t\t\tcontainer.className = container.className.replace( ' toggled', '' );\n\t\t\tbutton.setAttribute( 'aria-expanded', 'false' );\n\t\t\tmenu.setAttribute( 'aria-expanded', 'false' );\n\t\t} else {\n\t\t\tcontainer.className += ' toggled';\n\t\t\tbutton.setAttribute( 'aria-expanded', 'true' );\n\t\t\tmenu.setAttribute( 'aria-expanded', 'true' );\n\t\t}\n\t};\n\n\t// Get all the link elements within the menu.\n\tlinks    = menu.getElementsByTagName( 'a' );\n\n\t// Each time a menu link is focused or blurred, toggle focus.\n\tfor ( i = 0, len = links.length; i < len; i++ ) {\n\t\tlinks[i].addEventListener( 'focus', toggleFocus, true );\n\t\tlinks[i].addEventListener( 'blur', toggleFocus, true );\n\t}\n\n\t/**\n\t * Sets or removes .focus class on an element.\n\t */\n\tfunction toggleFocus() {\n\t\tvar self = this;\n\n\t\t// Move up through the ancestors of the current link until we hit .nav-menu.\n\t\twhile ( -1 === self.className.indexOf( 'nav-menu' ) ) {\n\n\t\t\t// On li elements toggle the class .focus.\n\t\t\tif ( 'li' === self.tagName.toLowerCase() ) {\n\t\t\t\tif ( -1 !== self.className.indexOf( 'focus' ) ) {\n\t\t\t\t\tself.className = self.className.replace( ' focus', '' );\n\t\t\t\t} else {\n\t\t\t\t\tself.className += ' focus';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself = self.parentElement;\n\t\t}\n\t}\n\n\t/**\n\t * Toggles `focus` class to allow submenu access on tablets.\n\t */\n\t( function( container ) {\n\t\tvar touchStartFn, i,\n\t\t\tparentLink = container.querySelectorAll( '.menu-item-has-children > a, .page_item_has_children > a' );\n\n\t\tif ( 'ontouchstart' in window ) {\n\t\t\ttouchStartFn = function( e ) {\n\t\t\t\tvar menuItem = this.parentNode, i;\n\n\t\t\t\tif ( ! menuItem.classList.contains( 'focus' ) ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tfor ( i = 0; i < menuItem.parentNode.children.length; ++i ) {\n\t\t\t\t\t\tif ( menuItem === menuItem.parentNode.children[i] ) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmenuItem.parentNode.children[i].classList.remove( 'focus' );\n\t\t\t\t\t}\n\t\t\t\t\tmenuItem.classList.add( 'focus' );\n\t\t\t\t} else {\n\t\t\t\t\tmenuItem.classList.remove( 'focus' );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor ( i = 0; i < parentLink.length; ++i ) {\n\t\t\t\tparentLink[i].addEventListener( 'touchstart', touchStartFn, false );\n\t\t\t}\n\t\t}\n\t}( container ) );\n} )();\n"]}